{{- if .Values.enableMongo }}
kind: PersistentVolume
apiVersion: v1
metadata:
  name: mongo-auth-pv
  labels:
    app: auth
spec:
  storageClassName: manual
  persistentVolumeReclaimPolicy: Retain
  capacity:
    storage: 15Gi
  accessModes:
    - ReadWriteOnce
  hostPath:
    path: "/k8sdata/mongo-auth"
---
kind: PersistentVolumeClaim
apiVersion: v1
metadata:
  name: mongo-auth-pv-claim
spec:
  storageClassName: manual
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 10Gi
---
apiVersion: v1
kind: Service
metadata:
  name: mongo-auth
  labels:
    app: auth
    role: mongo
spec:
  ports:
  - port: 27017
    protocol: TCP
  selector:
    app: auth
    role: mongo
---
apiVersion: apps/v1
#kind: StatefulSet
kind: Deployment
metadata:
  name: mongo-auth
spec:
#  serviceName: mongo
  selector:
    matchLabels:
      app: auth
      role: mongo
  replicas: 1
  template:
    metadata:
      labels:
        app: auth
        role: mongo
    spec:
      volumes:
      - name: mongo-auth-pv-storage
        persistentVolumeClaim:
          claimName: mongo-auth-pv-claim
      containers:
      - name: mongo
        image: mongo:4.1.3
#        env:
#        - name: MONGO_INITDB_ROOT_USERNAME
#          value: root
#        - name: MONGO_INITDB_ROOT_PASSWORD
#          value: example
        ports:
        - containerPort: 27017
        volumeMounts:
        - name: mongo-auth-pv-storage
          mountPath: /data/db
          readOnly: false
      nodeSelector:
        node: node01
#  volumeClaimTemplates:
#  - metadata:
#      name: mongo-auth
#    spec:
#      accessModes: [ "ReadWriteOnce" ]
#      resources:
#        requests:
#          storage: 15Gi
{{- end }}